import math
from msilib.schema import MsiAssemblyName

def guessingGame():
    guessingGame = True
    bottom = 0
    top = 100
    bottom_range = bottom
    top_range = top # Redeclared bottom_range and top_range -> if you declared it here, you don't need it up top
    print('Choose a number between 0 and 100: ')
    my_number = int(input())
    max_tries = math.ceil(math.log2((top_range - bottom_range) + 1))
    print("Max Tries: " + str(max_tries))
    tries = 1
    computers_guess = None
    # is the number greater than or less than the guess
    # if the computer guesses incorrectly, we want it to make another guess (as far as maxTries lets it).
    # we have a max number of tries defined by max_tries.
    while my_number != computers_guess and max_tries > 0:
        # Initial computer's guess is right in the middle.
        # the computer should guess differently, based on the feedback we give it (larger/smaller)
        computers_guess = int((top_range + bottom_range) / 2)
        # we want to figure see what the computer's guesses are
        print('My guess is...', computers_guess)
        # HOWTO? Binary Search
        # in order to find something, we will split to see if it is in a left half (guess > middle) or right half (guess < middle)
        if my_number > computers_guess:
            print('my Number was less than the guess.')
            bottom_range = computers_guess + 1
            max_tries -= 1
        elif my_number < computers_guess:
            print('my Number was greater than the guess.')
            top_range = computers_guess - 1
            max_tries -= 1
        tries += 1
    # Computer guessed correctly, and now we escaped the while loop!
    if my_number == computers_guess:
        print(f'the computer guessed my_number correctly in {tries - 1} tries! Computer wins!')
    else:
        print(f'computer failed to guess in {tries - 1} tries')
    print(f'tries left: {max_tries}')

def main():
    print('Alvin\'s guessing game')
    guessingGame()

main()
